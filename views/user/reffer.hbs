<div class="container">
  <div class="row">
    <div class="title">
      <h2>Order and Enjoy</h2>
    </div>
    <div>
      <h3 style="padding-right:50rem;">Selact your adress</h3>
    </div>
    {{#each savedAdress }}
    <div class="card  mb-3" style="max-width: 18rem;">
      <div class="card-header">
        <input type="radio" id="" value="{{this.id}}" name="adressUid">
        Address
      </div>
      <div class="card-body text-dark">
        <p class="text-dark">Name:{{this.Name}}</p>
        <p class="text-dark">Email:{{this.Email}}</p>
        <p class="text-dark">City:{{this.City}}</p>
        <p class="text-dark">state:{{this.state}}</p>
        <p class="text-dark">Adress:{{this.Adress}}</p>
        <p class="text-dark">pincode:{{this.pincode}}</p>
        <p class="text-dark">Number:{{this.Phone}}</p>
        <button class=" delete-button btn btn-danger"
          onclick="removeAdress('{{this.id}}','{{this._id}}')">Delete</button>
      </div>
    </div>
    {{/each}}
  </div>
  <div class="row">
    <div class="cart__discount" >
      <h6>Discount codes</h6>
      <form action="" id="coupenForm" style="margin-right:52rem;">
        <div style="width:10rem;"> <input id="couponCode" type="text" name="Couponcode" placeholder="Coupon-Code"></div>
        <input type="text"  value="{{Total}}" name="TotalAmount" hidden>
        <button  style="width:7rem ;height:3rem ;" class="btn"  type="submit">Apply</button>
      </form>
    </div>
  </div>
  <div style="margin-right:5rem ;">
    <a style="" class="login-trigger btn btn-dark" href="#" data-target="#login" data-toggle="modal">Add New Address</a>
    <div id="login" class="modal fade" role="dialog">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-body">
            <button data-dismiss="modal" class="close">&times;</button>
            <h4>ADD-New-One</h4>
            <form action="/ADD-AD" method="post">
              <input type="text" name="Name" class="password form-control" placeholder="Name" />
              <input type="text" name="Town" class="password form-control" placeholder="Town" />
              <textarea name="adress" placeholder="Adress" id=""
                style="width:20rem;color: #dadada;  margin-right:14rem;background: linear-gradient(to bottom right, #F87E7B, #B05574);};"></textarea>
              <input type="text" name="state" class="password form-control" placeholder="State" />
              <input type="email" name="Email" class="password form-control" placeholder="Email" />
              <input type="text" name="Pincode" class="password form-control" placeholder="Pincode" />
              <input type="text" name="Phone" class="password form-control" placeholder="Phone-Number" />
              <button class="btn btn-dark" type="submit">Add-adress</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div style="margin-top: 60px;" class="Yorder">
     <table >

      <tr>
        <th colspan="2">Your order</th>
      </tr>
      <tr id="newTR"></tr>
      <tr><td>Subtotal</td>
       <td>₹<span id="ttlamount">{{Total}}</span> </td>
      </tr>
      
      <tr>
        <td>Shipping</td>
        <td>Free shipping</td>
      </tr>
    </table><br> 

    {{!-- <div class="card" style="width: 20rem;">
  <div class="card-header">
       <h3>price details</h3>
  </div>
  <ul class="list-group list-group-flush" id="newTR" >
    <li  class="list-group-item">Total<span id="ttlamount" class="pull-right">{{Total}} </span><span class="pull-right">₹</span></li>
    <li class="list-group-item">Dapibus ac facilisis in</li>
    <li class="list-group-item">Vestibulum at eros</li>
  </ul>
</div> --}}
    <div>
      <input type="radio" name="payment-method" value="dbt" checked> Direct Bank Transfer
    </div>
    <p>
      Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order
      will not be shipped until the funds have cleared in our account.
    </p>
    <div>
      <input type="radio" name="payment-method" value="COD"> Cash on Delivery
    </div>
    <div>
      <input type="radio" name="payment-method" value="cd"> RazorPay <span>
        <img src="https://www.logolynx.com/images/logolynx/c3/c36093ca9fb6c250f74d319550acac4d.jpeg" alt="" width="50">
      </span>
    </div>
    <button class="main-btn" type="submit" onclick="procedTopayment()">Place Order</button>
  </div><!-- Yorder -->
</div>
</div>
<style>
  @import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700');

  body {
    background-color: #e1e9e8;
    font-family: 'Roboto Condensed', sans-serif;
    color: #262626;
    margin: 5% 0;
  }

  .container {
    width: 100%;
    padding-right: 15px;
    padding-left: 15px;
    margin-right: auto;
    margin-left: auto;
  }

  @media (min-width: 1200px) {
    .container {
      max-width: 1140px;
    }
  }

  .odfm {
    width: 22rem;
    height: 17rem;
    background-color: #EBECF0;
  }

  .d-flex {
    display: flex;
    flex-direction: row;
    background: #f6f6f6;
    border-radius: 0 0 5px 5px;
    padding: 25px;
  }

  form {
    flex: 4;
  }

  .Yorder {
    flex: 2;
  }

  .title {
    background-color: antiquewhite;
  }

  h2 {
    margin: 0;
    padding-left: 15px;
  }

  .required {
    color: red;
  }

  label,
  table {
    display: block;
    margin: 15px;
  }

  label>span {
    float: left;
    width: 25%;
    margin-top: 12px;
    padding-right: 10px;
  }

  input[type="text"],
  input[type="tel"],
  input[type="email"],
  select {
    width: 70%;
    height: 30px;
    padding: 5px 10px;
    margin-bottom: 10px;
    border: 1px solid #dadada;
    color: #888;
  }

  select {
    width: 72%;
    height: 45px;
    padding: 5px 10px;
    margin-bottom: 10px;
  }

  .Yorder {
    margin-top: 15px;
    height: 600px;
    padding: 20px;
    border: 1px solid #dadada;
  }

  table {
    margin: 0;
    padding: 0;
  }

  th {
    border-bottom: 1px solid #dadada;
    padding: 10px 0;
  }

  tr>td:nth-child(1) {
    text-align: left;
    color: #2d2d2a;
  }

  tr>td:nth-child(2) {
    text-align: right;
    color: #52ad9c;
  }

  td {
    border-bottom: 1px solid #dadada;
    padding: 25px 25px 25px 0;
  }

  p {
    display: block;
    color: #888;
    margin: 0;
    padding-left: 25px;
  }

  .Yorder>div {
    padding: 15px 0;
  }

  .main-btn {
    width: 100%;
    margin-top: 10px;
    padding: 10px;
    border: none;
    border-radius: 30px;
    background: #52ad9c;
    color: #fff;
    font-size: 15px;
    font-weight: bold;
  }

  .delete-button {
    width: 5rem;
    margin-left: 4rem;
    border-radius: 1rem;
  }
</style>
<script>
  function procedTopayment() {
    console.log('prcpmnt>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>')
    uiAdress = document.querySelector('input[name=adressUid]:checked').value;




       {{!-- <script>
            function checkout(){
            addressSaved=document.querySelector('input[name="addressSaved"]:checked').value
            $.ajax({
                url:'/checkout',
                method:'post',
                data:
                {
                    addressSaved:addressSaved
                },
                success:(response)=>{
                    alert(response)
                    if(response.status){
                        location.href='/order-success'
                        
                    }
                }

            })
            }
        </script> --}}

        <!-- checkout-area end -->















<script src="https://cdn.jsdelivr.net/clipboard.js/1.5.12/clipboard.min.js"></script>
<script>
  function procedTopayment() {
    console.log('prcpmnt>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>')
    uiAdress = document.querySelector('input[name=adressUid]:checked').value;
    payment = document.querySelector('input[name=payment-method]:checked').value;

    $.ajax({
      url: '/place-order',
      data: {
        selectedAdress: uiAdress,
        selectedPayment: payment
      },
      method: 'post',
      success: (response) => {
        console.log(response)
        alert(response)
        if (response.Codsuccess) {
          location.href = '/orderSuccess'
        } else {
          razorPayMethode(response)
        }
      }
    })
  }


  function razorPayMethode(order) {
    console.log('RAZORPAYRMMMMMMMMMMMMMMMMMMMMMMM')
    var options = {
      "key": "rzp_test_ESLJkTRKX7FKo3", // Enter the Key ID generated from the Dashboard
      "amount": order.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
      "currency": "INR",
      "name": "male Fasion",
      "description": "Test Transaction",
      "image": "https://example.com/your_logo",
      "order_id": order.id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1
      "handler": function (response) {
        verifypayment(response, order)

      },
      "prefill": {
        "name": "Gaurav Kumar",
        "email": "gaurav.kumar@example.com",
        "contact": "9999999999"
      },
      "notes": {
        "address": "Razorpay Corporate Office"
      },
      "theme": {
        "color": "#3399cc"
      }
    }
    var rzp1 = new Razorpay(options);
    rzp1.open();
  }
  function verifypayment(payment, order) {
    console.log('VERIFYLOGINMNNNNNNNNNNNNNNNNNNNNNNNNN')
    $.ajax({
      url: '/verify-payment',
      data: {
        payment,
        order
      },
      method: 'post',
      success: (response) => {
        if (response.status) {
          location.href = '/orderSuccess'
        } else {
          alert('payment faild')
        }
      }
    })



  }
  let Enter = 0
  $('#coupenForm').submit((e) => {
    let finalprice = document.getElementById('ttlamount').innerHTML
    console.log(finalprice, '<<<<<<<<<<<<<<<<<<<<<<')
    e.preventDefault()
    $.ajax({
      url: '/apply-coupon',
      data: $('#coupenForm').serialize(),
      method: 'post',
      success: (response) => {
        if (Enter == 0)
          console.log(response, '??????????')
        document.getElementById('ttlamount').innerHTML = response
        var newtd = document.createElement('td')
        var newtd2 = document.createElement('td')
        newtd2.innerHTML = "Total"
        newtd.innerHTML = "₹<span>" + finalprice + "</span>"
        document.getElementById("newTR").appendChild(newtd2)
        document.getElementById("newTR").appendChild(newtd)
        Enter++
      }
    })
  })
</script>
{{!-- 
<script>

  function myFunction(coupon) {
    var copyText = document.getElementById(coupon).innerHTML
    navigator.clipboard.writeText(copyText);
    Swal.fire({
      position: 'top-end',
      title: '<h5>Coupon Copied To Clipboard</h5>',
      showConfirmButton: false,
      timer: 1000 
    })

  }
</script> --}}

name:order.Name,
                address:order.Address,
                state:order.State,
                pincode:order.Pincode,
                email:order.Email,
                mobile:order.Mobile

     {{!-- <script>
            $("#checkout-form").submit((e)=>{
                e.preventDefault()
               $.ajax({
                url:'/checkout',
                method:'post',
                data:$('#checkout-form').serialize(),
                success:(response)=>{
                    alert(response)
                    if(response.codSuccess){
                        location.href='/order-success'
                        
                    }else{
                        razorpayPayment(response)

                    }
                }
               })
            }) --}}
            

            placeOrder: (order, product, total, userId) => {
        return new Promise(async (resolve, reject) => {
            let adressid = order.selectedAdress
            let newadress = await db.get().collection(collection.USERS_COLLECTION)
                .aggregate([
                    {
                        $match: { _id: ObjectID(userId) }
                    },
                    {
                        $unwind: '$adress'
                    },
                    {
                        $project: {
                            id: '$adress.id',
                            Name: '$adress.Name',
                            Mobile: '$adress.Phone',
                            Email: '$adress.Email',
                            address: '$adress.Adress',
                            city: '$adress.City',
                            State: '$adress.state',
                            Pincode: '$adress.pincode'
                        }
                    },
                    {
                        $match: { id: adressid }
                    }
                ]).toArray()
            let status = order.selectedPayment === 'COD' ? 'placed' : 'pending'
            let orderObj = {
                deliveryDetails: {
                    Name: newadress[0].Name,
                    Mobile: newadress[0].Mobile,
                    Email: newadress[0].Email,
                    address: newadress[0].address,
                    city: newadress[0].city,
                    State: newadress[0].State,
                    pincode: newadress[0].Pincode,

                },
                userId: ObjectID(userId),
                PaymentMethod: order.selectedPayment,
                products: product,
                totalAmount: total,
                status: status,
                date: moment().format('MMMM Do YYYY, h:mm:ss a'),
                Cancel: true,
                Return: false,
                retured: true,
                procancel: false,
                msg: false,
                cstCancel: false
            }
            db.get().collection(collection.ORDER_COLLECTION).insertOne(orderObj).then((response) => {
                db.get().collection(collection.CART_COLLECTION).deleteOne({ user: ObjectID(userId) })
                resolve(response.insertedId)
            })
        })
    },